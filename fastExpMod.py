"""
e = e0*(2^0) + e1*(2^1) + e2*(2^2) + ... + en * (2^n)

b^e = b^(e0*(2^0) + e1*(2^1) + e2*(2^2) + ... + en * (2^n))
    = b^(e0*(2^0)) * b^(e1*(2^1)) * b^(e2*(2^2)) * ... * b^(en*(2^n)) 

b^e mod m = ((b^(e0*(2^0)) mod m) * (b^(e1*(2^1)) mod m) * (b^(e2*(2^2)) mod m) * ... * (b^(en*(2^n)) mod m) mod m
"""
#c, d, n分别为注释中的 b, e, m
def fastExpMod(c, d, n):
    result = 1
    while d != 0:
        if (d&1) == 1:
            # di = 1, then mul
            result = (result * c) % n
        d >>= 1
        # b, b^2, b^4, b^8, ... , b^(2^n)
        c = (c*c) % n
    return result


if __name__ == '__main__':
    c = 0x45D8BD62BBF9966C81722D6D4AD5E6E91FD5258C8B0747CA166237D167D5C881B100D83D73352F18A60914963CA8F7DF9B9211273C8D7EDAC87132AADAC33DEF0BDA6C9EA91750818D869990521C6BA0A10BC1AC2273282FA4AC47EFBEEE99B2D35EBDA2019D1EF8BF24B5017FA8481B372362AAE138043A00D8761BCDCA80BC
    d = 46303288431249753085600614330107661451645580550943245679955762766208878531161608811654071990906984799472253632399283110769940225213351641307854479538499056014585515499210161562532887160518851291208745725114119235817675863667612756201842550141918980980087810087817831155007090883382721036933994860714897150209
    n = 0x84FF95E263D30FAD83684CC08B11DAB54F5A0F3D24A8763C47B57750ED2E342022652836E2EBB30A765DC7364F417E4555D1FD72D140EFB72E283007028CC2A4FE97E4FE3B5D272C917E734F8715A0C5BFF2900640D8097425AFA965F9B1566F339F155ACEB59EDE241327813C920A6FB98A6BB9209379F1BBEBCC955949D8BB
    print(fastExpMod(c, d, n))


#print fastExpMod(B, E, M)
#print B**E % M
